{"version":3,"sources":["img/avatars/no_foto.jpg","components/Main/Main.module.css","components/Main/ProfileInfo/ProfileInfo.module.css","components/Main/Post/Post.module.css","components/Main/CreatPost/CreatPost.module.css","components/Main/Post/Post.jsx","components/Main/CreatPost/CreatePostForm.jsx","components/Main/CreatPost/CreatPost.jsx","components/Main/CreatPost/CreatPostContainer.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Main/ProfileInfo/ProfileStatusWithHooks.jsx","components/Main/ProfileInfo/ProfileDataForm.jsx","components/Main/ProfileInfo/ProfileInfo.jsx","components/Main/Main.jsx","components/Main/MainContainer.jsx"],"names":["module","exports","Post","props","className","HS","post","avatarComment","src","adress","alt","message","like","maxLength10","maxLength","reduxForm","form","onSubmit","handleSubmit","creatPost","Field","component","Textarea","name","placeholder","validate","required","blockButton","button","CreatPost","React","memo","console","log","PostElements","postsData","map","p","id","values","addPosts","inputPost","CreatPostContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","profileStatus","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileDataFormReduxForm","profile","onClick","createdField","Input","type","contact","keys","contacts","key","ProfileData","isOwner","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","Preloader","logo_profile","main_foto","main_foto_description","photos","small","userPhoto","target","files","addMainFoto","initialValues","formData","saveProfile","Main","isAuth","main","to","MainContainer","userId","this","match","params","authorizetUserId","getUserProfile","getStatus","updateProfile","prevProps","prevState","snapshot","Component","mapStateToProps","auth","userid","compose","withRouter"],"mappings":"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","file":"static/js/3.9f001aa3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no_foto.00bd3a24.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__2GIuA\",\"block\":\"Main_block__1mySV\",\"profileStatus\":\"Main_profileStatus__Ko645\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo_profile\":\"ProfileInfo_logo_profile__3_0HG\",\"main_foto\":\"ProfileInfo_main_foto__1Z_yW\",\"main_foto_description\":\"ProfileInfo_main_foto_description__1hAi-\",\"name\":\"ProfileInfo_name__1MMLm\",\"contact\":\"ProfileInfo_contact__1gGyg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1yinx\",\"avatarComment\":\"Post_avatarComment__2IvcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"creatPost\":\"CreatPost_creatPost__2Z8k8\",\"textarea\":\"CreatPost_textarea__1WN9Z\",\"button\":\"CreatPost_button__2F_XG\",\"blockButton\":\"CreatPost_blockButton__36-Jd\"};","import React from 'react';\r\nimport HS from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return <div className={HS.post}>\r\n    <img className={HS.avatarComment} src={props.adress} alt=\"\" />\r\n    {props.message}\r\n    <span>{props.like}like</span>\r\n  </div>\r\n\r\n\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport HS from \"./CreatPost.module.css\";\r\nimport {\r\n  required,\r\n  maxLength\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLength(10);\r\n\r\nconst CreatePostForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={HS.creatPost}>\r\n      <Field\r\n        component={Textarea}\r\n        name={\"inputPost\"}\r\n        placeholder=\"Введите текст поста\"\r\n        validate={[required, maxLength10]}\r\n      />\r\n\r\n      <div className={HS.blockButton}>\r\n        <button className={HS.button}>Создать пост</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"newPost\" })(CreatePostForm);\r\n","import React from \"react\";\r\nimport Post from \"./../Post/Post\";\r\nimport CreatePostForm from './CreatePostForm';\r\n\r\n\r\nconst CreatPost = React.memo(props => {\r\n  console.log('yo')\r\n  let PostElements = props.postsData.map((p) => (\r\n      <Post\r\n          key={p.id}\r\n          message={p.message}\r\n          adress=\"https://pbs.twimg.com/profile_images/431529196478038018/i_qx9taM.jpeg\"\r\n          like={p.like}\r\n      />\r\n  ));\r\n\r\n  let onSubmit = (values) => {\r\n    props.addPosts(values.inputPost)\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        {PostElements}\r\n        <CreatePostForm onSubmit={onSubmit} {...props}/>\r\n      </div>\r\n  );\r\n});\r\n\r\n\r\nexport default CreatPost;\r\n","import CreatPost from './CreatPost';\r\nimport {addPostActionCreator } from '../../../redux/profileReducer';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        \r\n        addPosts: (inputPost) => {\r\n            dispatch(addPostActionCreator(inputPost))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst CreatPostContainer = connect (mapStateToProps, mapDispatchToProps) (CreatPost)\r\n\r\nexport default CreatPostContainer;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from \"react\";\r\nimport HS from \"../Main.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditeMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div className={HS.profileStatus}>\r\n            {!editMode &&\r\n            <div>\r\n              <span><b>Статус</b>: </span>\r\n              <span onDoubleClick={activateEditeMode}>{props.status || \"Статуса нет :(\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <span>Статус: </span>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditeMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport HS from \"./ProfileInfo.module.css\";\r\nimport {createdField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, status, updateStatus}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button onClick={() => {\r\n            }}>Сохранить данные\r\n            </button>\r\n        </div>\r\n        <div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            <div className={HS.name}><b>Имя</b>: {createdField(\"Full name\", \"fullName\", Input, [])}</div>\r\n            <span className={HS.name}><b>Девиз по жизни</b>: {createdField(\"About me\", \"aboutMe\", Input, [])}</span>\r\n            <div className={HS.name}><b>В поиске\r\n                работы</b>: {createdField(\"\", \"lookingForAJob\", Input, [], {type: \"checkbox\"})}</div>\r\n\r\n            <div className={HS.name}><b>Hard skill</b>: {createdField(\"\", \"lookingForAJobDescription\", Textarea, [])}\r\n            </div>\r\n\r\n        </div>\r\n        <div className={HS.contact}>\r\n            <b>Контакты</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div>\r\n                <b>{key}</b>: {createdField(key, \"contacts.\" + key, Input, [])}\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'editProfile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport HS from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../img/avatars/no_foto.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainFotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.addMainFoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData);\r\n        setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img src='https://wallpaperscave.com.ua/images/original/18/07-09/man-made-bridge-65456.jpg'\r\n                 alt='profile-logo' className={HS.logo_profile}></img>\r\n            <div className={HS.main_foto}>\r\n                <div>\r\n                    <img className={HS.main_foto_description} src={props.profile.photos.small || userPhoto}\r\n                         alt='foto'></img>\r\n                    <div>\r\n                        {props.isOwner && <input type={'file'} onChange={onMainFotoSelected}/>}\r\n                    </div>\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}\r\n                                       updateStatus={props.updateStatus} status={props.status}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={props.profile} isOwner={props.isOwner} updateStatus={props.updateStatus}\r\n                                   status={props.status}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({isOwner, goToEditMode, profile, updateStatus, status}) => {\r\n\r\n    return <div>\r\n        <div>{isOwner && <button onClick={goToEditMode}>Редактировать данные</button>}</div>\r\n        <div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            <div className={HS.name}><b>Имя</b>: {\" \" + profile.fullName}</div>\r\n            <span\r\n                className={HS.name}><b>Девиз по жизни</b>: {\" \" + profile.aboutMe && profile.aboutMe !== null ? profile.aboutMe : \"Нету :(\"}</span>\r\n            <div className={HS.name}><b>В поиске работы</b>: {\" \" + profile.lookingForAJob ? \"да\" : \"нет\"}</div>\r\n            {profile.lookingForAJob &&\r\n            <div className={HS.name}><b>Hard skill</b>: {\" \" + profile.lookingForAJobDescription}</div>\r\n            }\r\n        </div>\r\n        <div className={HS.contact}>\r\n            <b>Контакты</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport CreatPostContainer from \"./CreatPost/CreatPostContainer\";\r\nimport HS from \"./Main.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n    return (\r\n        <main className={HS.main}>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         addMainFoto={props.addMainFoto}\r\n                         saveProfile={props.saveProfile}/>\r\n\r\n            <CreatPostContainer/>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"./Main\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    addMainFoto,\r\n    saveProfile\r\n} from \"./../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n//import {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {compose} from \"redux\";\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n    updateProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizetUserId;\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.updateProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Main\r\n                {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                addMainFoto = {this.props.addMainFoto}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        isAuth: state.auth.isAuth,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizetUserId: state.auth.userid,\r\n    });\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {getUserProfile}),\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, addMainFoto, saveProfile})\r\n)(MainContainer);\r\n"],"sourceRoot":""}