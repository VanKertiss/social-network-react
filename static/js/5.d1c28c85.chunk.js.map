{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessage/AddMessageForm.jsx","components/Dialogs/AddMessage/AddMessage.jsx","hoc/withAuthRedirect.js","components/Dialogs/AddMessage/AddMessageContainer.jsx","components/Dialogs/Dialogs.jsx"],"names":["module","exports","DialogItem","props","path","id","className","HS","item","dialogItem","to","src","avatar","alt","name","Message","message","maxLength50","maxLength","reduxForm","form","addMessageText","React","createRef","onSubmit","handleSubmit","Field","component","Textarea","ref","placeholder","textarea","validate","required","button","AddMessage","dialogsElements","dialogsData","map","d","messagesElements","messagesData","m","dialogs","dialogs_items","messages","formData","alert","inputText","addMessage","mapStateToPropsForRedirect","state","isAuth","auth","compose","Component","RedirectComponent","this","connect","newMessageText","messagesPage","dispatch","addMessageActionCreator","Dialogs","AddMessageContainer"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,WAAa,4BAA4B,KAAO,sBAAsB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,UAAY,6B,qHCe9QC,EAZI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,qBAAKC,UAAWC,IAAGC,KAAnB,SACI,eAAC,IAAD,CAASF,UAAWC,IAAGE,WAAYC,GAAIN,EAAvC,UACI,qBAAKO,IAAKR,EAAMS,OAAQC,IAAKV,EAAMW,OACnC,+BAAOX,EAAMW,aCHdC,EAJC,SAACZ,GACb,OAAO,sBAAKG,UAAWC,IAAGS,QAAnB,cAA8Bb,EAAMa,QAApC,Q,iCCKLC,EAAcC,YAAU,IAoBfC,cAAU,CAACC,KAAM,cAAjBD,EAlBQ,SAAChB,GACpB,IAAIkB,EAAiBC,IAAMC,YAE3B,OACI,uBAAMC,SAAUrB,EAAMsB,aAAtB,UACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXd,KAAK,YACLe,IAAKR,EACLS,YAAY,mIACZxB,UAAWC,IAAGwB,SACdC,SAAU,CAACC,IAAUhB,KAEzB,wBAAQX,UAAWC,IAAG2B,OAAtB,qHCOGC,EAzBI,SAAChC,GAClB,IAAIiC,EAAkBjC,EAAMkC,YAAYC,KAAI,SAACC,GAAD,OAC1C,cAAC,EAAD,CAAuBzB,KAAMyB,EAAEzB,KAAMT,GAAIkC,EAAElC,GAAIO,OAAQ2B,EAAE3B,QAAxC2B,EAAElC,OAGjBmC,EAAmBrC,EAAMsC,aAAaH,KAAI,SAACI,GAAD,OAC5C,cAAC,EAAD,CAAoB1B,QAAS0B,EAAE1B,SAAjB0B,EAAErC,OAQlB,OACE,sBAAKC,UAAWC,IAAGoC,QAAnB,UACE,qBAAKrC,UAAWC,IAAGqC,cAAnB,SAAmCR,IACnC,qBAAK9B,UAAWC,IAAGsC,SAAnB,SAA8BL,IAC9B,cAAC,EAAD,aAAgBhB,SATH,SAACsB,GAChBC,MAAMD,EAASE,WACf7C,EAAM8C,WAAWH,EAASE,aAOgB7C,Q,wCCpB1C+C,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,QCiBRE,eDdiB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKtD,MAAMiD,OAET,cAACG,EAAD,eAAeE,KAAKtD,QAFI,cAAC,IAAD,CAAUO,GAAI,eAHV,GACXY,IAAMiC,WAUtC,OAFiCG,YAASR,EAATQ,CAAsCF,KCOvEE,aAlBkB,SAACP,GACnB,MAAO,CACHQ,eAAgBR,EAAMS,aAAaD,eACnCtB,YAAac,EAAMS,aAAavB,YAChCI,aAAcU,EAAMS,aAAanB,iBAIhB,SAACoB,GACtB,MAAO,CACHZ,WAAY,SAACD,GACTa,EAASC,YAAwBd,SAK9BM,CAGbnB,GCNa4B,UAfC,SAAC5D,GAKb,OACI,qBAAKG,UAAWC,IAAGoC,QAAnB,SAEQ,cAACqB,EAAD","file":"static/js/5.d1c28c85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3u3l2\",\"dialogs_item\":\"Dialogs_dialogs_item__34pG7\",\"dialogItem\":\"Dialogs_dialogItem__3Kybf\",\"item\":\"Dialogs_item__10evT\",\"messages\":\"Dialogs_messages__LapJp\",\"message\":\"Dialogs_message__24fWD\",\"active\":\"Dialogs_active__1ZHhp\",\"creatPost\":\"Dialogs_creatPost__2vLyE\"};","import React from 'react';\r\nimport HS from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={HS.item }>            \r\n            <NavLink className={HS.dialogItem} to={path}>\r\n                <img src={props.avatar} alt={props.name} />\r\n                <span>{props.name}</span>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport HS from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={HS.message}> {props.message} </div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport HS from \"./../Dialogs.module.css\";\r\nimport {Textarea} from '../../Common/FormsControls/FormsControls';\r\nimport {\r\n    required,\r\n    maxLength\r\n} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLength(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    let addMessageText = React.createRef();\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name=\"inputText\"\r\n                ref={addMessageText}\r\n                placeholder=\"Введите текст сообщения\"\r\n                className={HS.textarea}\r\n                validate={[required, maxLength50]}\r\n            />\r\n            <button className={HS.button}>Создать сообщение</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({form: \"newMessage\"})(AddMessageForm);","import React from \"react\";\r\nimport HS from \"./../Dialogs.module.css\";\r\nimport DialogItem from \"./../Dialog/DialogItem\";\r\nimport Message from \"./../Message/Message\";\r\nimport AddMessageForm from './AddMessageForm';\r\n\r\nconst AddMessage = (props) => {\r\n  let dialogsElements = props.dialogsData.map((d) => (\r\n    <DialogItem key={d.id} name={d.name} id={d.id} avatar={d.avatar} />\r\n  ));\r\n\r\n  let messagesElements = props.messagesData.map((m) => (\r\n    <Message key={m.id} message={m.message} />\r\n  ));\r\n\r\n  const onSubmit = (formData) => {\r\n    alert(formData.inputText);\r\n    props.addMessage(formData.inputText);\r\n  };\r\n\r\n  return (\r\n    <div className={HS.dialogs}>\r\n      <div className={HS.dialogs_items}>{dialogsElements}</div>\r\n      <div className={HS.messages}>{messagesElements}</div>\r\n      <AddMessageForm onSubmit={onSubmit} {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AddMessage;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to= '/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\nlet ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {connect} from 'react-redux';\r\nimport {addMessageActionCreator} from '../../../redux/dialogsReducer';\r\nimport AddMessage from './AddMessage';\r\nimport {withAuthRedirect} from '../../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText: state.messagesPage.newMessageText,\r\n        dialogsData: state.messagesPage.dialogsData,\r\n        messagesData: state.messagesPage.messagesData\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (inputText) => {\r\n            dispatch(addMessageActionCreator(inputText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(AddMessage);","import React from 'react';\r\nimport HS from './Dialogs.module.css';\r\nimport AddMessageContainer from './AddMessage/AddMessageContainer';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className={HS.dialogs}>\r\n           \r\n                <AddMessageContainer />\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;"],"sourceRoot":""}